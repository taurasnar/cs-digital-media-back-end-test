# Scalars

scalar Date

# Schema

schema {
    query: Query,
    mutation: Mutation
}

# Inputs

input CreateAuthorInput {
    firstName: String!
    lastName: String!
    birthDate: Date!
}

input CreateBookInput {
    title: String!
    genre: Genre!
    authorsIds: [ID!]!
}

input UpdateBookInput {
    id: ID!
    title: String!
    genre: Genre!
    authorsIds: [ID!]!
}

# Enums

enum Genre {
    FICTION, NONFICTION
}

# Types

type Query {
    # Operations for books
    findAllBooks: [Book!]!
    findBookById(id: ID!): Book!

    # Operations for authors
    findAllAuthors: [Author!]!
    findAuthorById(id: ID!): Author!
}

type Mutation {
    # Operations for books
    createBook(book: CreateBookInput!): Book!
    updateBook(book: UpdateBookInput!): Book!
    deleteBook(id: ID!): Boolean

    # Operations for authors
    createAuthor(author: CreateAuthorInput!) : Author!
}

type Book {
    id: ID!
    title: String!
    genre: Genre!
    authors: [Author!]!
}

type Author {
    id: ID!
    firstName: String!
    lastName: String!
    birthDate: Date!
}